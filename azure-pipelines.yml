trigger:
  branches:
    include:
    - main
    - dev

variables:
  AZURE_SERVICE_REGION: 'eastus'
  
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        echo "Using OCR API Key: $(OCR_API_KEY)"
        echo "Using Azure Speech Key: $(AZURE_SPEECH_KEY)"
        echo "Deploying to region: $(AZURE_SERVICE_REGION)"
      displayName: 'Display Variables'

    - script: |
        echo "Build completed"
      displayName: 'Build'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/requirements.txt'
        artifact: 'requirements'
      displayName: 'Publish requirements.txt as artifact'

- stage: DeployToDev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  jobs:
  - deployment: DeploymentJob
    environment: 'yonchee_env'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: requirements
            displayName: 'Download requirements.txt artifact'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
              addToPath: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r $(Pipeline.Workspace)/requirements/requirements.txt
            displayName: 'Install dependencies'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'yonchee-service-connection'
              appType: 'webAppLinux'
              appName: 'yonchee'
              runtimeStack: 'PYTHON|3.10'
              package: '$(Build.SourcesDirectory)'
              startUpCommand: 'waitress-serve --port=8000 app:app'