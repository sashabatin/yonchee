trigger:
  branches:
    include:
      - dev
      - main

# pr:
#   branches:
#     include:
#       - dev

jobs:
- job: Build
  displayName: 'Build job'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
        addToPath: true

    - script: |
        echo "Using OCR API Key: $(OCR_API_KEY)"
        echo "Using Azure Speech Key: $(AZURE_SPEECH_KEY)"
        echo "Deploying to region: $(AZURE_SERVICE_REGION)"
      displayName: 'Display Variables'  

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
      displayName: 'Create virtual environment and install dependencies'

    # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/release.zip'
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/release.zip
      displayName: 'Publish Artifact'
      artifact: python-app

- job: Deploy
  displayName: 'Deploy job'
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - download: current
      artifact: python-app

    - script: unzip -v $(Pipeline.Workspace)/python-app/release.zip
      displayName: 'Unzip artifact for deployment'
      timeoutInMinutes: 10  # Increase the timeout if necessary

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'yonchee-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az webapp deployment source config-zip \
            --resource-group yonchee_rg \
            --name yonchee \
            --src $(Pipeline.Workspace)/python-app/release.zip